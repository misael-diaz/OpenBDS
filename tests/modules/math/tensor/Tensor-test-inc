#
# source: Tensor-test-inc
# author: misael-diaz
# date:   2021-06-17
#
# Synopsis:
# Include for GNU make, defines source and object files to build tests.
#
#
# Copyright (C) 2021 Misael Diaz-Maldonado
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

include ../../../../modules/utils/utils-inc
include ../../../../modules/structs/dynamic/vector/Vector-inc
include ../../../../modules/math/tensor/Tensor-inc

# modules directory
# modules include
UTILS_MOD_DIR  = ../../../../modules/utils
VECTOR_MOD_DIR = ../../../../modules/structs/dynamic/vector
TENSOR_MOD_DIR = ../../../../modules/math/tensor
MODULES_INC    = -I$(UTILS_MOD_DIR) -I$(VECTOR_MOD_DIR)\
                 -I$(TENSOR_MOD_DIR)

# defines relative path for needed (sub)modules
UTILS_MOD_OBJ  = $(UTILS_MOD_DIR)/$(UTILS_MODULE_OBJ)
UTILS_SUB_OBJ  = $(UTILS_MOD_DIR)/$(UTILS_SUBMOD_OBJ)
VECTOR_MOD_OBJ = $(VECTOR_MOD_DIR)/$(VECTOR_MODULE_OBJ)
VECTOR_SUB_OBJ = $(VECTOR_MOD_DIR)/$(VECTOR_UTILIT_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_OBLIVI_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_MINT32_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_IINT32_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_MINT64_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_IINT64_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_METR64_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_IMPR64_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_MVECTT_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_IVECTT_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_INT32_PUSH_BACK_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_INT64_PUSH_BACK_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_REAL64_PUSH_BACK_OBJ)\
                 $(VECTOR_MOD_DIR)/$(VECTOR_VECTOR_PUSH_BACK_OBJ)
#                $(VECTOR_MOD_DIR)/$(VECTOR_ERASE_OBJ)
TENSOR_MOD_OBJ = $(TENSOR_MOD_DIR)/$(TENSOR_MODULE_OBJ)
TENSOR_SUB_OBJ = $(TENSOR_MOD_DIR)/$(TENSOR_SUBMOD_OBJ)


# src
TEST_TENSOR_SRC = test_tensor.for


# objects
TEST_TENSOR_OBJ = test_tensor.o


# excutables
TEST_TENSOR_EXE = test-tensor-class


# bundles (submodules, modules, and executables)
SUBM  = $(UTILS_SUB_OBJ) $(VECTOR_SUB_OBJ) $(TENSOR_SUB_OBJ)
MODS  = $(UTILS_MOD_OBJ) $(VECTOR_MOD_OBJ) $(TENSOR_MOD_OBJ)
TESTS = $(TEST_TENSOR_EXE)
